{"version":3,"file":"static/js/241.22d55c82.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@supabase/supabase-js/src/lib/version.ts","../node_modules/@supabase/supabase-js/src/lib/constants.ts","../node_modules/@supabase/supabase-js/src/lib/helpers.ts","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@supabase/gotrue-js/src/lib/version.ts","../node_modules/@supabase/gotrue-js/src/lib/constants.ts","../node_modules/@supabase/gotrue-js/src/lib/fetch.ts","../node_modules/@supabase/gotrue-js/src/lib/cookies.ts","../node_modules/@supabase/gotrue-js/src/lib/helpers.ts","../node_modules/@supabase/gotrue-js/src/GoTrueApi.ts","../node_modules/@supabase/gotrue-js/src/lib/polyfills.ts","../node_modules/@supabase/gotrue-js/src/GoTrueClient.ts","../node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@supabase/realtime-js/src/lib/transformers.ts","../node_modules/@supabase/postgrest-js/src/lib/types.ts","../node_modules/@supabase/postgrest-js/src/lib/PostgrestTransformBuilder.ts","../node_modules/@supabase/postgrest-js/src/lib/PostgrestFilterBuilder.ts","../node_modules/@supabase/postgrest-js/src/lib/PostgrestQueryBuilder.ts","../node_modules/@supabase/postgrest-js/src/lib/PostgrestRpcBuilder.ts","../node_modules/@supabase/postgrest-js/src/lib/constants.ts","../node_modules/@supabase/postgrest-js/src/lib/version.ts","../node_modules/@supabase/postgrest-js/src/PostgrestClient.ts","../node_modules/@supabase/realtime-js/src/lib/constants.ts","../node_modules/@supabase/realtime-js/src/lib/version.ts","../node_modules/@supabase/realtime-js/src/lib/timer.ts","../node_modules/@supabase/realtime-js/src/lib/serializer.ts","../node_modules/@supabase/realtime-js/src/lib/push.ts","../node_modules/@supabase/realtime-js/src/RealtimeSubscription.ts","../node_modules/@supabase/realtime-js/src/RealtimeClient.ts","../node_modules/@supabase/supabase-js/src/lib/SupabaseRealtimeClient.ts","../node_modules/@supabase/supabase-js/src/lib/SupabaseQueryBuilder.ts","../node_modules/@supabase/storage-js/src/lib/fetch.ts","../node_modules/@supabase/storage-js/src/lib/helpers.ts","../node_modules/@supabase/storage-js/src/lib/StorageFileApi.ts","../node_modules/@supabase/storage-js/src/lib/constants.ts","../node_modules/@supabase/storage-js/src/lib/version.ts","../node_modules/@supabase/storage-js/src/lib/StorageBucketApi.ts","../node_modules/@supabase/storage-js/src/StorageClient.ts","../node_modules/@supabase/functions-js/src/helper.ts","../node_modules/@supabase/functions-js/src/index.ts","../node_modules/@supabase/supabase-js/src/SupabaseClient.ts","../node_modules/@supabase/supabase-js/src/index.ts","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export const version = '1.35.7'\n","// constants.ts\nimport { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` }\nexport const STORAGE_KEY = 'supabase.auth.token'\n","// helpers.ts\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport function stripTrailingSlash(url: string): string {\n  return url.replace(/\\/$/, '')\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","// generated by genversion\nexport const version = '1.24.0'\n","import { version } from './version'\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const EXPIRY_MARGIN = 10 // in seconds\nexport const NETWORK_FAILURE = {\n  ERROR_MESSAGE: 'Request Failed',\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2, // in deciseconds\n}\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const COOKIE_OPTIONS = {\n  name: 'sb',\n  lifetime: 60 * 60 * 8,\n  domain: '',\n  path: '/',\n  sameSite: 'lax',\n}\n","import { NETWORK_FAILURE } from './constants'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = (error: any, reject: any) => {\n  if (!error?.status) {\n    return reject({ message: NETWORK_FAILURE.ERROR_MESSAGE })\n  }\n  if (typeof error.json !== 'function') {\n    return reject(error)\n  }\n  error.json().then((err: any) => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: error?.status || 500,\n    })\n  })\n}\n\nconst _getRequestParams = (method: RequestMethodType, options?: FetchOptions, body?: object) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n\n  return params\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return resolve\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(fetcher: Fetch, url: string, options?: FetchOptions): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, body)\n}\n","type Cookie = {\n  name: string\n  value: string\n  maxAge: number\n  domain?: string\n  path?: string\n  sameSite?: string\n}\n\n/**\n * Serialize data into a cookie header.\n */\nfunction serialize(\n  name: string,\n  val: string,\n  options: {\n    maxAge: number\n    domain: string\n    path: string\n    expires: Date\n    httpOnly: boolean\n    secure: boolean\n    sameSite: string\n  }\n) {\n  const opt = options || {}\n  const enc = encodeURIComponent\n  /* eslint-disable-next-line no-control-regex */\n  const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid')\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid')\n  }\n\n  const value = enc(val)\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid')\n  }\n\n  let str = name + '=' + value\n\n  if (null != opt.maxAge) {\n    const maxAge = opt.maxAge - 0\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge)\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid')\n    }\n\n    str += '; Domain=' + opt.domain\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid')\n    }\n\n    str += '; Path=' + opt.path\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid')\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly'\n  }\n\n  if (opt.secure) {\n    str += '; Secure'\n  }\n\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax'\n        break\n      case 'strict':\n        str += '; SameSite=Strict'\n        break\n      case 'none':\n        str += '; SameSite=None'\n        break\n      default:\n        throw new TypeError('option sameSite is invalid')\n    }\n  }\n\n  return str\n}\n\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req: any) {\n  if (!req || !req.headers || !req.headers.host) {\n    throw new Error('The \"host\" request header is not available')\n  }\n\n  const host =\n    (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host\n  if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie: Cookie, secure: boolean) {\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure,\n    path: cookie.path ?? '/',\n    domain: cookie.domain ?? '',\n    sameSite: cookie.sameSite ?? 'lax',\n  })\n}\n\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req: any, res: any, cookies: Array<Cookie>): string[] {\n  const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)))\n  const previousCookies = res.getHeader('Set-Cookie')\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies)\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies)\n    }\n  }\n  return strCookies\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req: any, res: any, cookies: Array<Cookie>) {\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies))\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req: any, res: any, cookie: Cookie) {\n  setCookies(req, res, [cookie])\n}\n\nexport function deleteCookie(req: any, res: any, name: string) {\n  setCookie(req, res, {\n    name,\n    value: '',\n    maxAge: -1,\n  })\n}\n","import { SupportedStorage } from './types'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function getParameterByName(name: string, url?: string) {\n  if (!url) url = window?.location?.href || ''\n  // eslint-disable-next-line no-useless-escape\n  name = name.replace(/[\\[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\n// LocalStorage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  isBrowser() && (await storage?.setItem(key, JSON.stringify(data)))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<any | null> => {\n  const value = isBrowser() && (await storage?.getItem(key))\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const getItemSynchronously = (storage: SupportedStorage, key: string): any | null => {\n  const value = isBrowser() && storage?.getItem(key)\n  if (!value || typeof value !== 'string') {\n    return null\n  }\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  isBrowser() && (await storage?.removeItem(key))\n}\n","import { Fetch, get, post, put, remove } from './lib/fetch'\nimport {\n  Session,\n  Provider,\n  AdminUserAttributes,\n  UserAttributes,\n  CookieOptions,\n  User,\n  OpenIDConnectCredentials,\n  VerifyOTPParams,\n} from './lib/types'\nimport { COOKIE_OPTIONS } from './lib/constants'\nimport { setCookies, getCookieString } from './lib/cookies'\nimport { expiresAt, resolveFetch } from './lib/helpers'\n\nimport type { ApiError } from './lib/types'\nexport default class GoTrueApi {\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected cookieOptions: CookieOptions\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    cookieOptions,\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    cookieOptions?: CookieOptions\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.cookieOptions = { ...COOKIE_OPTIONS, ...cookieOptions }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Create a temporary object with all configured headers and\n   * adds the Authorization token to be used on request methods\n   * @param jwt A valid, logged-in JWT.\n   */\n  private _createRequestHeaders(jwt: string) {\n    const headers = { ...this.headers }\n    headers['Authorization'] = `Bearer ${jwt}`\n    return headers\n  }\n\n  private cookieName() {\n    return this.cookieOptions.name ?? ''\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(`${query}`)\n    }\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  /**\n   * Creates a new user using their email address.\n   * @param email The email address of the user.\n   * @param password The password of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUpWithEmail(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/signup${queryString}`,\n        {\n          email,\n          password,\n          data: options.data,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an existing user using their email address.\n   * @param email The email address of the user.\n   * @param password The password of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   */\n  async signInWithEmail(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = '?grant_type=password'\n      if (options.redirectTo) {\n        queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { email, password, gotrue_meta_security: { captcha_token: options.captchaToken } },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Signs up a new user using their phone number and a password.\n   * @param phone The phone number of the user.\n   * @param password The password of the user.\n   * @param data Optional user metadata.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   */\n  async signUpWithPhone(\n    phone: string,\n    password: string,\n    options: {\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/signup`,\n        {\n          phone,\n          password,\n          data: options.data,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an existing user using their phone number and password.\n   * @param phone The phone number of the user.\n   * @param password The password of the user.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   */\n  async signInWithPhone(\n    phone: string,\n    password: string,\n    options: {\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const queryString = '?grant_type=password'\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { phone, password, gotrue_meta_security: { captcha_token: options.captchaToken } },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an OpenID Connect user using their id_token.\n   * @param id_token The IDToken of the user.\n   * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n   * @param provider The provider of the user.\n   * @param client_id The clientID of the user.\n   * @param issuer The issuer of the user.\n   */\n  async signInWithOpenIDConnect({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider,\n  }: OpenIDConnectCredentials): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const queryString = '?grant_type=id_token'\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { id_token, nonce, client_id, issuer, provider },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a magic login link to an email address.\n   * @param email The email address of the user.\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   */\n  async sendMagicLinkEmail(\n    email: string,\n    options: {\n      shouldCreateUser?: boolean\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n\n      const shouldCreateUser = options.shouldCreateUser ?? true\n      const data = await post(\n        this.fetch,\n        `${this.url}/otp${queryString}`,\n        {\n          email,\n          create_user: shouldCreateUser,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n   * @param phone The user's phone number WITH international prefix\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   */\n  async sendMobileOTP(\n    phone: string,\n    options: {\n      shouldCreateUser?: boolean\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const shouldCreateUser = options.shouldCreateUser ?? true\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/otp`,\n        {\n          phone,\n          create_user: shouldCreateUser,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ error: ApiError | null }> {\n    try {\n      await post(\n        this.fetch,\n        `${this.url}/logout`,\n        {},\n        { headers: this._createRequestHeaders(jwt), noResolveJson: true }\n      )\n      return { error: null }\n    } catch (e) {\n      return { error: e as ApiError }\n    }\n  }\n\n  /**\n   * @deprecated Use `verifyOTP` instead!\n   * @param phone The user's phone number WITH international prefix\n   * @param token token that user was sent to their mobile phone\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyMobileOTP(\n    phone: string,\n    token: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/verify`,\n        { phone, token, type: 'sms', redirect_to: options.redirectTo },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Send User supplied Email / Mobile OTP to be verified\n   * @param email The user's email address\n   * @param phone The user's phone number WITH international prefix\n   * @param token token that user was sent to their mobile phone\n   * @param type verification type that the otp is generated for\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyOTP(\n    { email, phone, token, type = 'sms' }: VerifyOTPParams,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/verify`,\n        { email, phone, token, type, redirect_to: options.redirectTo },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      data?: object\n    } = {}\n  ): Promise<{ data: User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/invite${queryString}`,\n        { email, data: options.data },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a reset request to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param captchaToken Verification token received when the user completes the captcha on your site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/recover${queryString}`,\n        { email, gotrue_meta_security: { captcha_token: options.captchaToken } },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  async refreshAccessToken(\n    refreshToken: string\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const data: any = await post(\n        this.fetch,\n        `${this.url}/token?grant_type=refresh_token`,\n        { refresh_token: refreshToken },\n        { headers: this.headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Set/delete the auth cookie based on the AuthChangeEvent.\n   * Works for Next.js & Express (requires cookie-parser middleware).\n   * @param req The request object.\n   * @param res The response object.\n   */\n  setAuthCookie(req: any, res: any) {\n    if (req.method !== 'POST') {\n      res.setHeader('Allow', 'POST')\n      res.status(405).end('Method Not Allowed')\n    }\n    const { event, session } = req.body\n\n    if (!event) throw new Error('Auth event missing!')\n    if (event === 'SIGNED_IN') {\n      if (!session) throw new Error('Auth session missing!')\n      setCookies(\n        req,\n        res,\n        [\n          { key: 'access-token', value: session.access_token },\n          { key: 'refresh-token', value: session.refresh_token },\n        ].map((token) => ({\n          name: `${this.cookieName()}-${token.key}`,\n          value: token.value,\n          domain: this.cookieOptions.domain,\n          maxAge: this.cookieOptions.lifetime ?? 0,\n          path: this.cookieOptions.path,\n          sameSite: this.cookieOptions.sameSite,\n        }))\n      )\n    }\n    if (event === 'SIGNED_OUT') {\n      setCookies(\n        req,\n        res,\n        ['access-token', 'refresh-token'].map((key) => ({\n          name: `${this.cookieName()}-${key}`,\n          value: '',\n          maxAge: -1,\n        }))\n      )\n    }\n    res.status(200).json({})\n  }\n\n  /**\n   * Deletes the Auth Cookies and redirects to the\n   * @param req The request object.\n   * @param res The response object.\n   * @param options Optionally specify a `redirectTo` URL in the options.\n   */\n  deleteAuthCookie(req: any, res: any, { redirectTo = '/' }: { redirectTo?: string }) {\n    setCookies(\n      req,\n      res,\n      ['access-token', 'refresh-token'].map((key) => ({\n        name: `${this.cookieName()}-${key}`,\n        value: '',\n        maxAge: -1,\n      }))\n    )\n    return res.redirect(307, redirectTo)\n  }\n\n  /**\n   * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n   * @param req The request object.\n   * @param res The response object.\n   * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n   */\n  getAuthCookieString(req: any, res: any): string[] {\n    if (req.method !== 'POST') {\n      res.setHeader('Allow', 'POST')\n      res.status(405).end('Method Not Allowed')\n    }\n    const { event, session } = req.body\n\n    if (!event) throw new Error('Auth event missing!')\n    if (event === 'SIGNED_IN') {\n      if (!session) throw new Error('Auth session missing!')\n      return getCookieString(\n        req,\n        res,\n        [\n          { key: 'access-token', value: session.access_token },\n          { key: 'refresh-token', value: session.refresh_token },\n        ].map((token) => ({\n          name: `${this.cookieName()}-${token.key}`,\n          value: token.value,\n          domain: this.cookieOptions.domain,\n          maxAge: this.cookieOptions.lifetime ?? 0,\n          path: this.cookieOptions.path,\n          sameSite: this.cookieOptions.sameSite,\n        }))\n      )\n    }\n    if (event === 'SIGNED_OUT') {\n      return getCookieString(\n        req,\n        res,\n        ['access-token', 'refresh-token'].map((key) => ({\n          name: `${this.cookieName()}-${key}`,\n          value: '',\n          maxAge: -1,\n        }))\n      )\n    }\n    return res.getHeader('Set-Cookie')\n  }\n\n  /**\n   * Generates links to be sent via email or other.\n   * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n   * @param email The user's email.\n   * @param password User password. For signup only.\n   * @param data Optional user metadata. For signup only.\n   * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n   */\n  async generateLink(\n    type:\n      | 'signup'\n      | 'magiclink'\n      | 'recovery'\n      | 'invite'\n      | 'email_change_current'\n      | 'email_change_new',\n    email: string,\n    options: {\n      password?: string\n      data?: object\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const data: any = await post(\n        this.fetch,\n        `${this.url}/admin/generate_link`,\n        {\n          type,\n          email,\n          password: options.password,\n          data: options.data,\n          redirect_to: options.redirectTo,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  // User Admin API\n\n  /**\n   * Creates a new user.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   *\n   * @param attributes The data you want to create the user with.\n   */\n  async createUser(\n    attributes: AdminUserAttributes\n  ): Promise<\n    { user: null; data: null; error: ApiError } | { user: User; data: User; error: null }\n  > {\n    try {\n      const data: any = await post(this.fetch, `${this.url}/admin/users`, attributes, {\n        headers: this.headers,\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async listUsers(): Promise<{ data: null; error: ApiError } | { data: User[]; error: null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/admin/users`, {\n        headers: this.headers,\n      })\n      return { data: data.users, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(\n    uid: string\n  ): Promise<{ data: null; error: ApiError } | { data: User; error: null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n      })\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get user by reading the cookie from the request.\n   * Works for Next.js & Express (requires cookie-parser middleware).\n   */\n  async getUserByCookie(\n    req: any,\n    res?: any\n  ): Promise<{\n    token: string | null\n    user: User | null\n    data: User | null\n    error: ApiError | null\n  }> {\n    try {\n      if (!req.cookies) {\n        throw new Error(\n          'Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!'\n        )\n      }\n\n      const access_token = req.cookies[`${this.cookieName()}-access-token`]\n      const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`]\n\n      if (!access_token) {\n        throw new Error('No cookie found!')\n      }\n\n      const { user, error: getUserError } = await this.getUser(access_token)\n      if (getUserError) {\n        if (!refresh_token) throw new Error('No refresh_token cookie found!')\n        if (!res)\n          throw new Error('You need to pass the res object to automatically refresh the session!')\n        const { data, error } = await this.refreshAccessToken(refresh_token)\n        if (error) {\n          throw error\n        } else if (data) {\n          setCookies(\n            req,\n            res,\n            [\n              { key: 'access-token', value: data.access_token },\n              { key: 'refresh-token', value: data.refresh_token! },\n            ].map((token) => ({\n              name: `${this.cookieName()}-${token.key}`,\n              value: token.value,\n              domain: this.cookieOptions.domain,\n              maxAge: this.cookieOptions.lifetime ?? 0,\n              path: this.cookieOptions.path,\n              sameSite: this.cookieOptions.sameSite,\n            }))\n          )\n          return { token: data.access_token, user: data.user, data: data.user, error: null }\n        }\n      }\n      return { token: access_token, user: user, data: user, error: null }\n    } catch (e) {\n      return { token: null, user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(\n    uid: string,\n    attributes: AdminUserAttributes\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      this //\n      const data: any = await put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n        headers: this.headers,\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   *\n   * @param uid The user uid you want to remove.\n   */\n  async deleteUser(\n    uid: string\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await remove(\n        this.fetch,\n        `${this.url}/admin/users/${uid}`,\n        {},\n        {\n          headers: this.headers,\n        }\n      )\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Gets the current user details.\n   *\n   * This method is called by the GoTrueClient `update` where\n   * the jwt is set to this.currentSession.access_token\n   * and therefore, acts like getting the currently authenticated user\n   *\n   * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n   */\n  async getUser(\n    jwt: string\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/user`, {\n        headers: this._createRequestHeaders(jwt),\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates the user data.\n   * @param jwt A valid, logged-in JWT.\n   * @param attributes The data you want to update.\n   */\n  async updateUser(\n    jwt: string,\n    attributes: UserAttributes\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await put(this.fetch, `${this.url}/user`, attributes, {\n        headers: this._createRequestHeaders(jwt),\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n}\n","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n","import GoTrueApi from './GoTrueApi'\nimport {\n  isBrowser,\n  getParameterByName,\n  uuid,\n  setItemAsync,\n  removeItemAsync,\n  getItemSynchronously,\n  getItemAsync,\n} from './lib/helpers'\nimport {\n  GOTRUE_URL,\n  DEFAULT_HEADERS,\n  STORAGE_KEY,\n  EXPIRY_MARGIN,\n  NETWORK_FAILURE,\n} from './lib/constants'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { Fetch } from './lib/fetch'\n\nimport type {\n  ApiError,\n  Session,\n  User,\n  UserAttributes,\n  Provider,\n  Subscription,\n  AuthChangeEvent,\n  CookieOptions,\n  UserCredentials,\n  VerifyOTPParams,\n  OpenIDConnectCredentials,\n  SupportedStorage,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS,\n}\n\nconst decodeBase64URL = (value: string): string => {\n  try {\n    // atob is present in all browsers and nodejs >= 16\n    // but if it is not it will throw a ReferenceError in which case we can try to use Buffer\n    // replace are here to convert the Base64-URL into Base64 which is what atob supports\n    // replace with //g regex acts like replaceAll\n    return atob(value.replace(/[-]/g, '+').replace(/[_]/g, '/'))\n  } catch (e) {\n    if (e instanceof ReferenceError) {\n      // running on nodejs < 16\n      // Buffer supports Base64-URL transparently\n      return Buffer.from(value, 'base64').toString('utf-8')\n    } else {\n      throw e\n    }\n  }\n}\n\nexport default class GoTrueClient {\n  /**\n   * Namespace for the GoTrue API methods.\n   * These can be used for example to get a user from a JWT in a server environment or reset a user's password.\n   */\n  api: GoTrueApi\n  /**\n   * The currently logged in user or null.\n   */\n  protected currentUser: User | null\n  /**\n   * The session object for the currently logged in user or null.\n   */\n  protected currentSession: Session | null\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected localStorage: SupportedStorage\n  protected multiTab: boolean\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected refreshTokenTimer?: ReturnType<typeof setTimeout>\n  protected networkRetries: number = 0\n\n  /**\n   * Create a new client for use in the browser.\n   * @param options.url The URL of the GoTrue server.\n   * @param options.headers Any additional headers to send to the GoTrue server.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.cookieOptions\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(options: {\n    url?: string\n    headers?: { [key: string]: string }\n    detectSessionInUrl?: boolean\n    autoRefreshToken?: boolean\n    persistSession?: boolean\n    localStorage?: SupportedStorage\n    multiTab?: boolean\n    cookieOptions?: CookieOptions\n    fetch?: Fetch\n  }) {\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.currentUser = null\n    this.currentSession = null\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.multiTab = settings.multiTab\n    this.localStorage = settings.localStorage || globalThis.localStorage\n    this.api = new GoTrueApi({\n      url: settings.url,\n      headers: settings.headers,\n      cookieOptions: settings.cookieOptions,\n      fetch: settings.fetch,\n    })\n    this._recoverSession()\n    this._recoverAndRefresh()\n    this._listenForMultiTabEvents()\n    this._handleVisibilityChange()\n\n    if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n      // Handle the OAuth redirect\n      this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n        if (error) {\n          throw new Error('Error getting session from URL.')\n        }\n      })\n    }\n  }\n\n  /**\n   * Creates a new user.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @param phone The user's phone number.\n   * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n   * @param data Optional user metadata.\n   */\n  async signUp(\n    { email, password, phone }: UserCredentials,\n    options: {\n      redirectTo?: string\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{\n    user: User | null\n    session: Session | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      const { data, error } =\n        phone && password\n          ? await this.api.signUpWithPhone(phone!, password!, {\n              data: options.data,\n              captchaToken: options.captchaToken,\n            })\n          : await this.api.signUpWithEmail(email!, password!, {\n              redirectTo: options.redirectTo,\n              data: options.data,\n              captchaToken: options.captchaToken,\n            })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on sign up.'\n      }\n\n      let session: Session | null = null\n      let user: User | null = null\n\n      if ((data as Session).access_token) {\n        session = data as Session\n        user = session.user as User\n        this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      if ((data as User).id) {\n        user = data as User\n      }\n\n      return { user, session, error: null }\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Log in an existing user, or login via a third-party provider.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param phone The user's phone number.\n   * @param password The user's password.\n   * @param refreshToken A valid refresh token that was returned on login.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  async signIn(\n    { email, phone, password, refreshToken, provider, oidc }: UserCredentials,\n    options: {\n      redirectTo?: string\n      shouldCreateUser?: boolean\n      scopes?: string\n      captchaToken?: string\n      queryParams?: { [key: string]: string }\n    } = {}\n  ): Promise<{\n    session: Session | null\n    user: User | null\n    provider?: Provider\n    url?: string | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      if (email && !password) {\n        const { error } = await this.api.sendMagicLinkEmail(email, {\n          redirectTo: options.redirectTo,\n          shouldCreateUser: options.shouldCreateUser,\n          captchaToken: options.captchaToken,\n        })\n        return { user: null, session: null, error }\n      }\n      if (email && password) {\n        return this._handleEmailSignIn(email, password, {\n          redirectTo: options.redirectTo,\n          captchaToken: options.captchaToken,\n        })\n      }\n      if (phone && !password) {\n        const { error } = await this.api.sendMobileOTP(phone, {\n          shouldCreateUser: options.shouldCreateUser,\n          captchaToken: options.captchaToken,\n        })\n        return { user: null, session: null, error }\n      }\n      if (phone && password) {\n        return this._handlePhoneSignIn(phone, password)\n      }\n      if (refreshToken) {\n        // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n        const { error } = await this._callRefreshToken(refreshToken)\n        if (error) throw error\n\n        return {\n          user: this.currentUser,\n          session: this.currentSession,\n          error: null,\n        }\n      }\n      if (provider) {\n        return this._handleProviderSignIn(provider, {\n          redirectTo: options.redirectTo,\n          scopes: options.scopes,\n          queryParams: options.queryParams,\n        })\n      }\n      if (oidc) {\n        return this._handleOpenIDConnectSignIn(oidc)\n      }\n      throw new Error(\n        `You must provide either an email, phone number, a third-party provider or OpenID Connect.`\n      )\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   * @param email The user's email address.\n   * @param phone The user's phone number.\n   * @param token The user's password.\n   * @param type The user's verification type.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyOTP(\n    params: VerifyOTPParams,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{\n    user: User | null\n    session: Session | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      const { data, error } = await this.api.verifyOTP(params, options)\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on token verification.'\n      }\n\n      let session: Session | null = null\n      let user: User | null = null\n\n      if ((data as Session).access_token) {\n        session = data as Session\n        user = session.user as User\n        this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      if ((data as User).id) {\n        user = data as User\n      }\n\n      return { user, session, error: null }\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n   *\n   * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n   */\n  user(): User | null {\n    return this.currentUser\n  }\n\n  /**\n   * Returns the session data, if there is an active session.\n   */\n  session(): Session | null {\n    return this.currentSession\n  }\n\n  /**\n   * Force refreshes the session including the user data in case it was updated in a different session.\n   */\n  async refreshSession(): Promise<{\n    data: Session | null\n    user: User | null\n    error: ApiError | null\n  }> {\n    try {\n      if (!this.currentSession?.access_token) throw new Error('Not logged in.')\n\n      // currentSession and currentUser will be updated to latest on _callRefreshToken\n      const { error } = await this._callRefreshToken()\n      if (error) throw error\n\n      return { data: this.currentSession, user: this.currentUser, error: null }\n    } catch (e) {\n      return { data: null, user: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates user data, if there is a logged in user.\n   */\n  async update(\n    attributes: UserAttributes\n  ): Promise<{ data: User | null; user: User | null; error: ApiError | null }> {\n    try {\n      if (!this.currentSession?.access_token) throw new Error('Not logged in.')\n\n      const { user, error } = await this.api.updateUser(\n        this.currentSession.access_token,\n        attributes\n      )\n      if (error) throw error\n      if (!user) throw Error('Invalid user data.')\n\n      const session = { ...this.currentSession, user }\n      this._saveSession(session)\n      this._notifyAllSubscribers('USER_UPDATED')\n\n      return { data: user, user, error: null }\n    } catch (e) {\n      return { data: null, user: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sets the session from the provided session information. The access_token\n   * is reused if it is not expired, otherwise a new access token is fetched by\n   * refreshing the session with the provided refresh_token.\n   *\n   * This method is useful when using in a server-side rendered context.\n   *\n   * @param params.refresh_token A valid refresh token (typically obtained from a cookie)\n   * @param params.access_token An access token (typically obtained from a cookie)\n   */\n  async setSession(params: {\n    refresh_token: string\n    access_token: string\n  }): Promise<{ session: Session | null; error: ApiError | null }>\n\n  /**\n   * Sets the session data from refresh_token and returns current Session and Error\n   * @param refresh_token a JWT token\n   */\n  async setSession(\n    refresh_token: string\n  ): Promise<{ session: Session | null; error: ApiError | null }>\n\n  async setSession(\n    arg0: string | { access_token: string; refresh_token: string }\n  ): Promise<{ session: Session | null; error: ApiError | null }> {\n    let session: Session\n\n    if (typeof arg0 === 'string') {\n      // using the refresh_token string API\n      const refresh_token = arg0\n\n      const { data, error } = await this.api.refreshAccessToken(refresh_token)\n      if (error) {\n        return { session: null, error: error }\n      }\n\n      session = data!\n    } else {\n      // using the object parameter API\n\n      const timeNow = Math.round(Date.now() / 1000)\n\n      let { refresh_token, access_token } = arg0\n      let expires_at = 0\n      let expires_in = 0\n\n      const tokenParts = access_token.split('.')\n      if (tokenParts.length !== 3) throw new Error('access_token is not a proper JWT')\n\n      const bodyJSON = decodeBase64URL(tokenParts[1])\n\n      let parsed: any = undefined\n      try {\n        parsed = JSON.parse(bodyJSON)\n      } catch (e) {\n        throw new Error('access_token is not a proper JWT, invalid JSON in body')\n      }\n\n      if (typeof parsed === 'object' && parsed && typeof parsed.exp === 'number') {\n        expires_at = parsed.exp\n        expires_in = timeNow - parsed.exp\n      } else {\n        throw new Error('access_token is not a proper JWT, missing exp claim')\n      }\n\n      if (timeNow > expires_at) {\n        const { data, error } = await this.api.refreshAccessToken(refresh_token)\n        if (error) {\n          return { session: null, error: error }\n        }\n\n        session = data!\n      } else {\n        const { user, error } = await this.api.getUser(access_token)\n        if (error) throw error\n\n        session = {\n          access_token,\n          expires_in,\n          expires_at,\n          refresh_token,\n          token_type: 'bearer',\n          user: user!,\n        }\n      }\n    }\n\n    try {\n      this._saveSession(session)\n      this._notifyAllSubscribers('SIGNED_IN')\n      return { session, error: null }\n    } catch (e) {\n      return { error: e as ApiError, session: null }\n    }\n  }\n\n  /**\n   * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n   * @param access_token a jwt access token\n   */\n  setAuth(access_token: string): Session {\n    this.currentSession = {\n      ...this.currentSession,\n      access_token,\n      token_type: 'bearer',\n      user: this.user(),\n    }\n\n    this._notifyAllSubscribers('TOKEN_REFRESHED')\n\n    return this.currentSession\n  }\n\n  /**\n   * Gets the session data from a URL string\n   * @param options.storeSession Optionally store the session in the browser\n   */\n  async getSessionFromUrl(options?: {\n    storeSession?: boolean\n  }): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      if (!isBrowser()) throw new Error('No browser detected.')\n\n      const error_description = getParameterByName('error_description')\n      if (error_description) throw new Error(error_description)\n\n      const provider_token = getParameterByName('provider_token')\n      const provider_refresh_token = getParameterByName('provider_refresh_token')\n      const access_token = getParameterByName('access_token')\n      if (!access_token) throw new Error('No access_token detected.')\n      const expires_in = getParameterByName('expires_in')\n      if (!expires_in) throw new Error('No expires_in detected.')\n      const refresh_token = getParameterByName('refresh_token')\n      if (!refresh_token) throw new Error('No refresh_token detected.')\n      const token_type = getParameterByName('token_type')\n      if (!token_type) throw new Error('No token_type detected.')\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expires_at = timeNow + parseInt(expires_in)\n\n      const { user, error } = await this.api.getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: parseInt(expires_in),\n        expires_at,\n        refresh_token,\n        token_type,\n        user: user!,\n      }\n      if (options?.storeSession) {\n        this._saveSession(session)\n        const recoveryMode = getParameterByName('type')\n        this._notifyAllSubscribers('SIGNED_IN')\n        if (recoveryMode === 'recovery') {\n          this._notifyAllSubscribers('PASSWORD_RECOVERY')\n        }\n      }\n      // Remove tokens from URL\n      window.location.hash = ''\n\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`. There is no way to revoke a user's session JWT before it automatically expires\n   */\n  async signOut(): Promise<{ error: ApiError | null }> {\n    const accessToken = this.currentSession?.access_token\n    this._removeSession()\n    this._notifyAllSubscribers('SIGNED_OUT')\n    if (accessToken) {\n      const { error } = await this.api.signOut(accessToken)\n      if (error) return { error }\n    }\n    return { error: null }\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: Subscription | null\n    error: ApiError | null\n  } {\n    try {\n      const id: string = uuid()\n      const subscription: Subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this.stateChangeEmitters.delete(id)\n        },\n      }\n      this.stateChangeEmitters.set(id, subscription)\n      return { data: subscription, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  private async _handleEmailSignIn(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ) {\n    try {\n      const { data, error } = await this.api.signInWithEmail(email, password, {\n        redirectTo: options.redirectTo,\n        captchaToken: options.captchaToken,\n      })\n      if (error || !data) return { data: null, user: null, session: null, error }\n\n      if (data?.user?.confirmed_at || data?.user?.email_confirmed_at) {\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      return { data, user: data.user, session: data, error: null }\n    } catch (e) {\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private async _handlePhoneSignIn(\n    phone: string,\n    password: string,\n    options: {\n      captchaToken?: string\n    } = {}\n  ) {\n    try {\n      const { data, error } = await this.api.signInWithPhone(phone, password, options)\n      if (error || !data) return { data: null, user: null, session: null, error }\n\n      if (data?.user?.phone_confirmed_at) {\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      return { data, user: data.user, session: data, error: null }\n    } catch (e) {\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    } = {}\n  ) {\n    const url: string = this.api.getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n\n    try {\n      // try to open on the browser\n      if (isBrowser()) {\n        window.location.href = url\n      }\n      return { provider, url, data: null, session: null, user: null, error: null }\n    } catch (e) {\n      // fallback to returning the URL\n      if (url) return { provider, url, data: null, session: null, user: null, error: null }\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private async _handleOpenIDConnectSignIn({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider,\n  }: OpenIDConnectCredentials): Promise<{\n    session: Session | null\n    user: User | null\n    error: ApiError | null\n  }> {\n    if (id_token && nonce && ((client_id && issuer) || provider)) {\n      try {\n        const { data, error } = await this.api.signInWithOpenIDConnect({\n          id_token,\n          nonce,\n          client_id,\n          issuer,\n          provider,\n        })\n        if (error || !data) return { user: null, session: null, error }\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n        return { user: data.user, session: data, error: null }\n      } catch (e) {\n        return { user: null, session: null, error: e as ApiError }\n      }\n    }\n    throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`)\n  }\n\n  /**\n   * Attempts to get the session from LocalStorage\n   * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n   */\n  private _recoverSession() {\n    try {\n      const data = getItemSynchronously(this.localStorage, STORAGE_KEY)\n      if (!data) return null\n      const { currentSession, expiresAt } = data\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if (expiresAt >= timeNow + EXPIRY_MARGIN && currentSession?.user) {\n        this._saveSession(currentSession)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    try {\n      const data = await getItemAsync(this.localStorage, STORAGE_KEY)\n      if (!data) return null\n      const { currentSession, expiresAt } = data\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if (expiresAt < timeNow + EXPIRY_MARGIN) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          this.networkRetries++\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n          if (error) {\n            console.log(error.message)\n            if (\n              error.message === NETWORK_FAILURE.ERROR_MESSAGE &&\n              this.networkRetries < NETWORK_FAILURE.MAX_RETRIES\n            ) {\n              if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n              this.refreshTokenTimer = setTimeout(\n                () => this._recoverAndRefresh(),\n                NETWORK_FAILURE.RETRY_INTERVAL ** this.networkRetries * 100 // exponential backoff\n              )\n              return\n            }\n            await this._removeSession()\n          }\n          this.networkRetries = 0\n        } else {\n          this._removeSession()\n        }\n      } else if (!currentSession) {\n        console.log('Current session is missing data.')\n        this._removeSession()\n      } else {\n        // should be handled on _recoverSession method already\n        // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n        this._saveSession(currentSession)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n    } catch (err) {\n      console.error(err)\n      return null\n    }\n  }\n\n  private async _callRefreshToken(refresh_token = this.currentSession?.refresh_token) {\n    try {\n      if (!refresh_token) {\n        throw new Error('No current session.')\n      }\n      const { data, error } = await this.api.refreshAccessToken(refresh_token)\n      if (error) throw error\n      if (!data) throw Error('Invalid session data.')\n\n      this._saveSession(data)\n      this._notifyAllSubscribers('TOKEN_REFRESHED')\n      this._notifyAllSubscribers('SIGNED_IN')\n\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  private _notifyAllSubscribers(event: AuthChangeEvent) {\n    this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession))\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private _saveSession(session: Session) {\n    this.currentSession = session\n    this.currentUser = session.user\n\n    const expiresAt = session.expires_at\n    if (expiresAt) {\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = expiresAt - timeNow\n      const refreshDurationBeforeExpires = expiresIn > EXPIRY_MARGIN ? EXPIRY_MARGIN : 0.5\n      this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000)\n    }\n\n    // Do we need any extra check before persist session\n    // access_token or user ?\n    if (this.persistSession && session.expires_at) {\n      this._persistSession(this.currentSession)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    const data = { currentSession, expiresAt: currentSession.expires_at }\n    setItemAsync(this.localStorage, STORAGE_KEY, data)\n  }\n\n  private async _removeSession() {\n    this.currentSession = null\n    this.currentUser = null\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n    removeItemAsync(this.localStorage, STORAGE_KEY)\n  }\n\n  /**\n   * Clear and re-create refresh token timer\n   * @param value time intervals in milliseconds\n   */\n  private _startAutoRefreshToken(value: number) {\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n    if (value <= 0 || !this.autoRefreshToken) return\n\n    this.refreshTokenTimer = setTimeout(async () => {\n      this.networkRetries++\n      const { error } = await this._callRefreshToken()\n      if (!error) this.networkRetries = 0\n      if (\n        error?.message === NETWORK_FAILURE.ERROR_MESSAGE &&\n        this.networkRetries < NETWORK_FAILURE.MAX_RETRIES\n      )\n        this._startAutoRefreshToken(NETWORK_FAILURE.RETRY_INTERVAL ** this.networkRetries * 100) // exponential backoff\n    }, value)\n    if (typeof this.refreshTokenTimer.unref === 'function') this.refreshTokenTimer.unref()\n  }\n\n  /**\n   * Listens for changes to LocalStorage and updates the current session.\n   */\n  private _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !window?.addEventListener) {\n      return false\n    }\n\n    try {\n      window?.addEventListener('storage', (e: StorageEvent) => {\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue))\n          if (newSession?.currentSession?.access_token) {\n            this._saveSession(newSession.currentSession)\n            this._notifyAllSubscribers('SIGNED_IN')\n          } else {\n            this._removeSession()\n            this._notifyAllSubscribers('SIGNED_OUT')\n          }\n        }\n      })\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error)\n    }\n  }\n\n  private _handleVisibilityChange() {\n    if (!this.multiTab || !isBrowser() || !window?.addEventListener) {\n      return false\n    }\n\n    try {\n      window?.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') {\n          this._recoverAndRefresh()\n        }\n      })\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n}\n","import { GoTrueClient } from '@supabase/gotrue-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends GoTrueClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n","export type Fetch = typeof fetch\n\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nexport type PostgrestError = {\n  message: string\n  details: string\n  hint: string\n  code: string\n}\n\n/**\n * Response format\n *\n * {@link https://github.com/supabase/supabase-js/issues/32}\n */\ninterface PostgrestResponseBase {\n  status: number\n  statusText: string\n}\n\ninterface PostgrestResponseSuccess<T> extends PostgrestResponseBase {\n  error: null\n  data: T[]\n  body: T[]\n  count: number | null\n}\ninterface PostgrestResponseFailure extends PostgrestResponseBase {\n  error: PostgrestError\n  data: null\n  // For backward compatibility: body === data\n  body: null\n  count: null\n}\nexport type PostgrestResponse<T> = PostgrestResponseSuccess<T> | PostgrestResponseFailure\n\ninterface PostgrestSingleResponseSuccess<T> extends PostgrestResponseBase {\n  error: null\n  data: T\n  // For backward compatibility: body === data\n  body: T\n}\nexport type PostgrestSingleResponse<T> =\n  | PostgrestSingleResponseSuccess<T>\n  | PostgrestResponseFailure\nexport type PostgrestMaybeSingleResponse<T> = PostgrestSingleResponse<T | null>\n\nexport abstract class PostgrestBuilder<T> implements PromiseLike<PostgrestResponse<T>> {\n  protected method!: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url!: URL\n  protected headers!: { [key: string]: string }\n  protected schema?: string\n  protected body?: Partial<T> | Partial<T>[]\n  protected shouldThrowOnError: boolean\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n  protected allowEmpty: boolean\n\n  constructor(builder: PostgrestBuilder<T>) {\n    Object.assign(this, builder)\n    let _fetch: Fetch\n    if (builder.fetch) {\n      _fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n    } else {\n      _fetch = fetch\n    }\n    this.fetch = (...args) => _fetch(...args)\n    this.shouldThrowOnError = builder.shouldThrowOnError || false\n    this.allowEmpty = builder.allowEmpty || false\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(throwOnError?: boolean): this {\n    if (throwOnError === null || throwOnError === undefined) {\n      throwOnError = true\n    }\n    this.shouldThrowOnError = throwOnError\n    return this\n  }\n\n  then<TResult1 = PostgrestResponse<T>, TResult2 = never>(\n    onfulfilled?:\n      | ((value: PostgrestResponse<T>) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (typeof this.schema === 'undefined') {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers['Accept-Profile'] = this.schema\n    } else {\n      this.headers['Content-Profile'] = this.schema\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers['Content-Type'] = 'application/json'\n    }\n\n    let res = this.fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count = null\n      let status = res.status\n      let statusText = res.statusText\n\n      if (res.ok) {\n        const isReturnMinimal = this.headers['Prefer']?.split(',').includes('return=minimal')\n        if (this.method !== 'HEAD' && !isReturnMinimal) {\n          const text = await res.text()\n          if (!text) {\n            // discard `text`\n          } else if (this.headers['Accept'] === 'text/csv') {\n            data = text\n          } else {\n            data = JSON.parse(text)\n          }\n        }\n\n        const countHeader = this.headers['Prefer']?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n        } catch {\n          error = {\n            message: body,\n          }\n        }\n\n        if (error && this.allowEmpty && error?.details?.includes('Results contain 0 rows')) {\n          error = null\n          status = 200\n          statusText = 'OK'\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw error\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText,\n        body: data,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `FetchError: ${fetchError.message}`,\n          details: '',\n          hint: '',\n          code: fetchError.code || '',\n        },\n        data: null,\n        body: null,\n        count: null,\n        status: 400,\n        statusText: 'Bad Request',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n}\n","import { PostgrestBuilder, PostgrestMaybeSingleResponse, PostgrestSingleResponse } from './types'\n\n/**\n * Post-filters (transforms)\n */\n\nexport default class PostgrestTransformBuilder<T> extends PostgrestBuilder<T> {\n  /**\n   * Performs vertical filtering with SELECT.\n   *\n   * @param columns  The columns to retrieve, separated by commas.\n   */\n  select(columns = '*'): this {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = columns\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    return this\n  }\n\n  /**\n   * Orders the result with the specified `column`.\n   *\n   * @param column  The column to order on.\n   * @param ascending  If `true`, the result will be in ascending order.\n   * @param nullsFirst  If `true`, `null`s appear first.\n   * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n   */\n  order(\n    column: keyof T,\n    {\n      ascending = true,\n      nullsFirst = false,\n      foreignTable,\n    }: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string } = {}\n  ): this {\n    const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${\n        nullsFirst ? 'nullsfirst' : 'nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limits the result with the specified `count`.\n   *\n   * @param count  The maximum no. of rows to limit to.\n   * @param foreignTable  The foreign table to use (for foreign columns).\n   */\n  limit(count: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limits the result to rows within the specified range, inclusive.\n   *\n   * @param from  The starting index from which to limit the result, inclusive.\n   * @param to  The last index to which to limit the result, inclusive.\n   * @param foreignTable  The foreign table to use (for foreign columns).\n   */\n  range(from: number, to: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`\n    const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Sets the AbortSignal for the fetch request.\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Retrieves only one row from the result. Result must be one row (e.g. using\n   * `limit`), otherwise this will result in an error.\n   */\n  single(): PromiseLike<PostgrestSingleResponse<T>> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    return this as PromiseLike<PostgrestSingleResponse<T>>\n  }\n\n  /**\n   * Retrieves at most one row from the result. Result must be at most one row\n   * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n   * error.\n   */\n  maybeSingle(): PromiseLike<PostgrestMaybeSingleResponse<T>> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    this.allowEmpty = true\n    return this as PromiseLike<PostgrestMaybeSingleResponse<T>>\n  }\n\n  /**\n   * Set the response type to CSV.\n   */\n  csv(): PromiseLike<PostgrestSingleResponse<string>> {\n    this.headers['Accept'] = 'text/csv'\n    return this as PromiseLike<PostgrestSingleResponse<string>>\n  }\n}\n","import PostgrestTransformBuilder from './PostgrestTransformBuilder'\n\n/**\n * Filters\n */\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n  | 'not.eq'\n  | 'not.neq'\n  | 'not.gt'\n  | 'not.gte'\n  | 'not.lt'\n  | 'not.lte'\n  | 'not.like'\n  | 'not.ilike'\n  | 'not.is'\n  | 'not.in'\n  | 'not.cs'\n  | 'not.cd'\n  | 'not.sl'\n  | 'not.sr'\n  | 'not.nxl'\n  | 'not.nxr'\n  | 'not.adj'\n  | 'not.ov'\n  | 'not.fts'\n  | 'not.plfts'\n  | 'not.phfts'\n  | 'not.wfts'\n\nexport default class PostgrestFilterBuilder<T> extends PostgrestTransformBuilder<T> {\n  /**\n   * Finds all rows which doesn't satisfy the filter.\n   *\n   * @param column  The column to filter on.\n   * @param operator  The operator to filter with.\n   * @param value  The value to filter with.\n   */\n  not(column: keyof T, operator: FilterOperator, value: any): this {\n    this.url.searchParams.append(`${column}`, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows satisfying at least one of the filters.\n   *\n   * @param filters  The filters to use, separated by commas.\n   * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n   */\n  or(filters: string, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` exactly matches the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  eq(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `eq.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` doesn't match the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  neq(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `neq.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is greater than the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  gt(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `gt.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is greater than or\n   * equal to the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  gte(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `gte.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is less than the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  lt(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `lt.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is less than or equal\n   * to the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  lte(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `lte.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value in the stated `column` matches the supplied\n   * `pattern` (case sensitive).\n   *\n   * @param column  The column to filter on.\n   * @param pattern  The pattern to filter with.\n   */\n  like(column: keyof T, pattern: string): this {\n    this.url.searchParams.append(`${column}`, `like.${pattern}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value in the stated `column` matches the supplied\n   * `pattern` (case insensitive).\n   *\n   * @param column  The column to filter on.\n   * @param pattern  The pattern to filter with.\n   */\n  ilike(column: keyof T, pattern: string): this {\n    this.url.searchParams.append(`${column}`, `ilike.${pattern}`)\n    return this\n  }\n\n  /**\n   * A check for exact equality (null, true, false), finds all rows whose\n   * value on the stated `column` exactly match the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  is(column: keyof T, value: boolean | null): this {\n    this.url.searchParams.append(`${column}`, `is.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is found on the\n   * specified `values`.\n   *\n   * @param column  The column to filter on.\n   * @param values  The values to filter with.\n   */\n  in(column: keyof T, values: T[keyof T][]): this {\n    const cleanedValues = values\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose json, array, or range value on the stated `column`\n   * contains the values specified in `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  contains(column: keyof T, value: string | T[keyof T][] | object): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(`${column}`, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  /** @deprecated Use `contains()` instead. */\n  cs = this.contains\n\n  /**\n   * Finds all rows whose json, array, or range value on the stated `column` is\n   * contained by the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  containedBy(column: keyof T, value: string | T[keyof T][] | object): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(`${column}`, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  /** @deprecated Use `containedBy()` instead. */\n  cd = this.containedBy\n\n  /**\n   * Finds all rows whose range value on the stated `column` is strictly to the\n   * left of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeLt(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `sl.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeLt()` instead. */\n  sl = this.rangeLt\n\n  /**\n   * Finds all rows whose range value on the stated `column` is strictly to\n   * the right of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeGt(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `sr.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeGt()` instead. */\n  sr = this.rangeGt\n\n  /**\n   * Finds all rows whose range value on the stated `column` does not extend\n   * to the left of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeGte(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `nxl.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeGte()` instead. */\n  nxl = this.rangeGte\n\n  /**\n   * Finds all rows whose range value on the stated `column` does not extend\n   * to the right of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeLte(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `nxr.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeLte()` instead. */\n  nxr = this.rangeLte\n\n  /**\n   * Finds all rows whose range value on the stated `column` is adjacent to\n   * the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeAdjacent(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `adj.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeAdjacent()` instead. */\n  adj = this.rangeAdjacent\n\n  /**\n   * Finds all rows whose array or range value on the stated `column` overlaps\n   * (has a value in common) with the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  overlaps(column: keyof T, value: string | T[keyof T][]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(`${column}`, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  /** @deprecated Use `overlaps()` instead. */\n  ov = this.overlaps\n\n  /**\n   * Finds all rows whose text or tsvector value on the stated `column` matches\n   * the tsquery in `query`.\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   * @param type  The type of tsquery conversion to use on `query`.\n   */\n  textSearch(\n    column: keyof T,\n    query: string,\n    {\n      config,\n      type = null,\n    }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' | null } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * to_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` instead.\n   */\n  fts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * plainto_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n   */\n  plfts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * phraseto_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n   */\n  phfts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * websearch_to_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n   */\n  wfts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose `column` satisfies the filter.\n   *\n   * @param column  The column to filter on.\n   * @param operator  The operator to filter with.\n   * @param value  The value to filter with.\n   */\n  filter(column: keyof T, operator: FilterOperator, value: any): this {\n    this.url.searchParams.append(`${column}`, `${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose columns match the specified `query` object.\n   *\n   * @param query  The object to filter with, with column names as keys mapped\n   *               to their filter values.\n   */\n  match(query: Record<string, unknown>): this {\n    Object.keys(query).forEach((key) => {\n      this.url.searchParams.append(`${key}`, `eq.${query[key]}`)\n    })\n    return this\n  }\n}\n","import { Fetch, PostgrestBuilder } from './types'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\n\nexport default class PostgrestQueryBuilder<T> extends PostgrestBuilder<T> {\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    } = {}\n  ) {\n    super(({ fetch, shouldThrowOnError } as unknown) as PostgrestBuilder<T>)\n    this.url = new URL(url)\n    this.headers = { ...headers }\n    this.schema = schema\n  }\n\n  /**\n   * Performs vertical filtering with SELECT.\n   *\n   * @param columns  The columns to retrieve, separated by commas.\n   * @param head  When set to true, select will void data.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  select(\n    columns = '*',\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = columns\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (count) {\n      this.headers['Prefer'] = `count=${count}`\n    }\n    if (head) {\n      this.method = 'HEAD'\n    }\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs an INSERT into the table.\n   *\n   * @param values  The values to insert.\n   * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  insert(\n    values: Partial<T> | Partial<T>[],\n    options?: {\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<T>\n  /**\n   * @deprecated Use `upsert()` instead.\n   */\n  insert(\n    values: Partial<T> | Partial<T>[],\n    options?: {\n      upsert?: boolean\n      onConflict?: string\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<T>\n  insert(\n    values: Partial<T> | Partial<T>[],\n    {\n      upsert = false,\n      onConflict,\n      returning = 'representation',\n      count = null,\n    }: {\n      upsert?: boolean\n      onConflict?: string\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'POST'\n\n    const prefersHeaders = [`return=${returning}`]\n    if (upsert) prefersHeaders.push('resolution=merge-duplicates')\n\n    if (upsert && onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    this.body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs an UPSERT into the table.\n   *\n   * @param values  The values to insert.\n   * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n   * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n   * @param count  Count algorithm to use to count rows in a table.\n   * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n   */\n  upsert(\n    values: Partial<T> | Partial<T>[],\n    {\n      onConflict,\n      returning = 'representation',\n      count = null,\n      ignoreDuplicates = false,\n    }: {\n      onConflict?: string\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n      ignoreDuplicates?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'POST'\n\n    const prefersHeaders = [\n      `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n      `return=${returning}`,\n    ]\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    this.body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs an UPDATE on the table.\n   *\n   * @param values  The values to update.\n   * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  update(\n    values: Partial<T>,\n    {\n      returning = 'representation',\n      count = null,\n    }: {\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'PATCH'\n    const prefersHeaders = [`return=${returning}`]\n    this.body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs a DELETE on the table.\n   *\n   * @param returning  If `true`, return the deleted row(s) in the response.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  delete({\n    returning = 'representation',\n    count = null,\n  }: {\n    returning?: 'minimal' | 'representation'\n    count?: null | 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<T> {\n    this.method = 'DELETE'\n    const prefersHeaders = [`return=${returning}`]\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n    return new PostgrestFilterBuilder(this)\n  }\n}\n","import { Fetch, PostgrestBuilder } from './types'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\n\nexport default class PostgrestRpcBuilder<T> extends PostgrestBuilder<T> {\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    } = {}\n  ) {\n    super(({ fetch, shouldThrowOnError } as unknown) as PostgrestBuilder<T>)\n    this.url = new URL(url)\n    this.headers = { ...headers }\n    this.schema = schema\n  }\n\n  /**\n   * Perform a function call.\n   */\n  rpc(\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    if (head) {\n      this.method = 'HEAD'\n\n      if (params) {\n        Object.entries(params).forEach(([name, value]) => {\n          this.url.searchParams.append(name, value)\n        })\n      }\n    } else {\n      this.method = 'POST'\n      this.body = params\n    }\n\n    if (count) {\n      if (this.headers['Prefer'] !== undefined) this.headers['Prefer'] += `,count=${count}`\n      else this.headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder(this)\n  }\n}\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` }\n","// generated by genversion\nexport const version = '0.37.4'\n","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder'\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder'\nimport PostgrestFilterBuilder from './lib/PostgrestFilterBuilder'\nimport { DEFAULT_HEADERS } from './lib/constants'\nimport { Fetch } from './lib/types'\n\nexport default class PostgrestClient {\n  url: string\n  headers: { [key: string]: string }\n  schema?: string\n  fetch?: Fetch\n  shouldThrowOnError?: boolean\n\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url  URL of the PostgREST endpoint.\n   * @param headers  Custom headers.\n   * @param schema  Postgres schema to switch to.\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      throwOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      throwOnError?: boolean\n    } = {}\n  ) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.schema = schema\n    this.fetch = fetch\n    this.shouldThrowOnError = throwOnError\n  }\n\n  /**\n   * Authenticates the request with JWT.\n   *\n   * @param token  The JWT token to use.\n   */\n  auth(token: string): this {\n    this.headers['Authorization'] = `Bearer ${token}`\n    return this\n  }\n\n  /**\n   * Perform a table operation.\n   *\n   * @param table  The table name to operate on.\n   */\n  from<T = any>(table: string): PostgrestQueryBuilder<T> {\n    const url = `${this.url}/${table}`\n    return new PostgrestQueryBuilder<T>(url, {\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param params  The parameters to pass to the function call.\n   * @param head  When set to true, no data will be returned.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  rpc<T = any>(\n    fn: string,\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    const url = `${this.url}/rpc/${fn}`\n    return new PostgrestRpcBuilder<T>(url, {\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError,\n    }).rpc(params, { head, count })\n  }\n}\n","import { version } from './version'\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` }\n\nexport const VSN: string = '1.0.0'\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = 'connecting',\n  Open = 'open',\n  Closing = 'closing',\n  Closed = 'closed',\n}\n","export const version = '1.7.5'\n","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(public callback: Function, public timerCalc: Function) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: object\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(\n      decoder.decode(buffer.slice(offset, buffer.byteLength))\n    )\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n","import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport RealtimeSubscription from '../RealtimeSubscription'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: Function\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeSubscription,\n    public event: string,\n    public payload: { [key: string]: unknown } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel.joinRef(),\n    })\n  }\n\n  updatePayload(payload: { [key: string]: unknown }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    this.channel.on(this.refEvent, callback)\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent) this.channel.trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    this.channel.off(this.refEvent)\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({\n    status,\n    response,\n  }: {\n    status: string\n    response: Function\n  }) {\n    this.recHooks\n      .filter((h) => h.status === status)\n      .forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\n\nexport default class RealtimeSubscription {\n  bindings: any[] = []\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n\n  constructor(\n    public topic: string,\n    public params: { [key: string]: unknown } = {},\n    public socket: RealtimeClient\n  ) {\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError((reason: string) => {\n      if (this.isLeaving() || this.isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this.isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload: any, ref: string) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this.rejoin()\n    }\n  }\n\n  subscribe(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      this.joinedOnce = true\n      this.rejoin(timeout)\n      return this.joinPush\n    }\n  }\n\n  onClose(callback: Function) {\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  onError(callback: Function) {\n    this.on(CHANNEL_EVENTS.error, (reason: string) => callback(reason))\n  }\n\n  on(event: string, callback: Function) {\n    this.bindings.push({ event, callback })\n  }\n\n  off(event: string) {\n    this.bindings = this.bindings.filter((bind) => bind.event !== event)\n  }\n\n  canPush() {\n    return this.socket.isConnected() && this.isJoined()\n  }\n\n  push(event: CHANNEL_EVENTS, payload: any, timeout = this.timeout) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this.canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  updateJoinPayload(payload: { [key: string]: unknown }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout) {\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef())\n    }\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose())\n    leavePush.send()\n    if (!this.canPush()) {\n      leavePush.trigger('ok', {})\n    }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   */\n  onMessage(event: string, payload: any, ref?: string) {\n    return payload\n  }\n\n  isMember(topic: string) {\n    return this.topic === topic\n  }\n\n  joinRef() {\n    return this.joinPush.ref\n  }\n\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return\n    }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  trigger(event: string, payload?: any, ref?: string) {\n    let { close, error, leave, join } = CHANNEL_EVENTS\n    let events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n      return\n    }\n    let handledPayload = this.onMessage(event, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    this.bindings\n      .filter((bind) => {\n        // Bind all events if the user specifies a wildcard.\n        if (bind.event === '*') {\n          return event === payload?.type\n        } else {\n          return bind.event === event\n        }\n      })\n      .map((bind) => bind.callback(handledPayload, ref))\n  }\n\n  replyEventName(ref: string) {\n    return `chan_reply_${ref}`\n  }\n\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed\n  }\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored\n  }\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined\n  }\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining\n  }\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving\n  }\n}\n","import { w3cwebsocket } from 'websocket'\nimport {\n  VSN,\n  CHANNEL_EVENTS,\n  TRANSPORTS,\n  SOCKET_STATES,\n  DEFAULT_TIMEOUT,\n  WS_CLOSE_NORMAL,\n  DEFAULT_HEADERS,\n  CONNECTION_STATE,\n} from './lib/constants'\nimport Timer from './lib/timer'\nimport Serializer from './lib/serializer'\nimport RealtimeSubscription from './RealtimeSubscription'\n\nexport type Options = {\n  transport?: WebSocket\n  timeout?: number\n  heartbeatIntervalMs?: number\n  longpollerTimeout?: number\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: string }\n}\ntype Message = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n  join_ref?: string\n}\n\ntype ChannelParams = {\n  selfBroadcast?: boolean\n  [key: string]: any\n}\n\nconst noop = () => {}\n\nexport default class RealtimeClient {\n  accessToken: string | null = null\n  channels: RealtimeSubscription[] = []\n  endPoint: string = ''\n  headers?: { [key: string]: string } = DEFAULT_HEADERS\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: any = w3cwebsocket\n  heartbeatIntervalMs: number = 30000\n  longpollerTimeout: number = 20000\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  ref: number = 0\n  reconnectTimer: Timer\n  logger: Function = noop\n  encode: Function\n  decode: Function\n  reconnectAfterMs: Function\n  conn: WebSocket | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  constructor(endPoint: string, options?: Options) {\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n\n    if (options?.params) this.params = options.params\n    if (options?.headers) this.headers = { ...this.headers, ...options.headers }\n    if (options?.timeout) this.timeout = options.timeout\n    if (options?.logger) this.logger = options.logger\n    if (options?.transport) this.transport = options.transport\n    if (options?.heartbeatIntervalMs)\n      this.heartbeatIntervalMs = options.heartbeatIntervalMs\n    if (options?.longpollerTimeout)\n      this.longpollerTimeout = options.longpollerTimeout\n\n    this.reconnectAfterMs = options?.reconnectAfterMs\n      ? options.reconnectAfterMs\n      : (tries: number) => {\n          return [1000, 2000, 5000, 10000][tries - 1] || 10000\n        }\n    this.encode = options?.encode\n      ? options.encode\n      : (payload: JSON, callback: Function) => {\n          return callback(JSON.stringify(payload))\n        }\n    this.decode = options?.decode\n      ? options.decode\n      : this.serializer.decode.bind(this.serializer)\n    this.reconnectTimer = new Timer(async () => {\n      await this.disconnect()\n      this.connect()\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Connects the socket, unless already connected.\n   */\n  connect(): void {\n    if (this.conn) {\n      return\n    }\n\n    this.conn = new this.transport(this.endPointURL(), [], null, this.headers)\n\n    if (this.conn) {\n      // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n      this.conn.binaryType = 'arraybuffer'\n      this.conn.onopen = () => this._onConnOpen()\n      this.conn.onerror = (error) => this._onConnError(error as ErrorEvent)\n      this.conn.onmessage = (event) => this.onConnMessage(event)\n      this.conn.onclose = (event) => this._onConnClose(event)\n    }\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(\n    code?: number,\n    reason?: string\n  ): Promise<{ error: Error | null; data: boolean }> {\n    return new Promise((resolve, _reject) => {\n      try {\n        if (this.conn) {\n          this.conn.onclose = function () {} // noop\n          if (code) {\n            this.conn.close(code, reason || '')\n          } else {\n            this.conn.close()\n          }\n          this.conn = null\n          // remove open handles\n          this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n          this.reconnectTimer.reset()\n        }\n        resolve({ error: null, data: true })\n      } catch (error) {\n        resolve({ error: error as Error, data: false })\n      }\n    })\n  }\n\n  /**\n   * Logs the message.\n   *\n   * For customized logging, `this.logger` can be overriden.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Registers a callback for connection state change event.\n   *\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen(() => console.log(\"Socket opened.\"))\n   */\n  onOpen(callback: Function) {\n    this.stateChangeCallbacks.open.push(callback)\n  }\n\n  /**\n   * Registers a callback for connection state change events.\n   *\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen(() => console.log(\"Socket closed.\"))\n   */\n  onClose(callback: Function) {\n    this.stateChangeCallbacks.close.push(callback)\n  }\n\n  /**\n   * Registers a callback for connection state change events.\n   *\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen((error) => console.log(\"An error occurred\"))\n   */\n  onError(callback: Function) {\n    this.stateChangeCallbacks.error.push(callback)\n  }\n\n  /**\n   * Calls a function any time a message is received.\n   *\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onMessage((message) => console.log(message))\n   */\n  onMessage(callback: Function) {\n    this.stateChangeCallbacks.message.push(callback)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState(): CONNECTION_STATE {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return CONNECTION_STATE.Connecting\n      case SOCKET_STATES.open:\n        return CONNECTION_STATE.Open\n      case SOCKET_STATES.closing:\n        return CONNECTION_STATE.Closing\n      default:\n        return CONNECTION_STATE.Closed\n    }\n  }\n\n  /**\n   * Retuns `true` is the connection is open.\n   */\n  isConnected(): boolean {\n    return this.connectionState() === CONNECTION_STATE.Open\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   */\n  remove(channel: RealtimeSubscription) {\n    this.channels = this.channels.filter(\n      (c: RealtimeSubscription) => c.joinRef() !== channel.joinRef()\n    )\n  }\n\n  channel(topic: string, chanParams: ChannelParams = {}): RealtimeSubscription {\n    const chan = new RealtimeSubscription(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * Push out a message if the socket is connected.\n   *\n   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n   */\n  push(data: Message): void {\n    const { topic, event, payload, ref } = data\n    let callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      callback()\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  onConnMessage(rawMessage: { data: any }) {\n    this.decode(rawMessage.data, (msg: Message) => {\n      let { topic, event, payload, ref } = msg\n\n      if (\n        (ref && ref === this.pendingHeartbeatRef) ||\n        event === payload?.type\n      ) {\n        this.pendingHeartbeatRef = null\n      }\n\n      this.log(\n        'receive',\n        `${payload.status || ''} ${topic} ${event} ${\n          (ref && '(' + ref + ')') || ''\n        }`,\n        payload\n      )\n      this.channels\n        .filter((channel: RealtimeSubscription) => channel.isMember(topic))\n        .forEach((channel: RealtimeSubscription) =>\n          channel.trigger(event, payload, ref)\n        )\n      this.stateChangeCallbacks.message.forEach((callback) => callback(msg))\n    })\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   */\n  endPointURL(): string {\n    return this._appendParams(\n      this.endPoint,\n      Object.assign({}, this.params, { vsn: VSN })\n    )\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   */\n  makeRef(): string {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * @param token A JWT string.\n   */\n  setAuth(token: string | null) {\n    this.accessToken = token\n\n    this.channels.forEach((channel) => {\n      token && channel.updateJoinPayload({ user_token: token })\n\n      if (channel.joinedOnce && channel.isJoined()) {\n        channel.push(CHANNEL_EVENTS.access_token, { access_token: token })\n      }\n    })\n  }\n\n  /**\n   * Unsubscribe from channels with the specified topic.\n   */\n  leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c.isJoined() || c.isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  private _onConnOpen() {\n    this.log('transport', `connected to ${this.endPointURL()}`)\n    this._flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(\n      () => this._sendHeartbeat(),\n      this.heartbeatIntervalMs\n    )\n    this.stateChangeCallbacks.open.forEach((callback) => callback())!\n  }\n\n  private _onConnClose(event: any) {\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach((callback) => callback(event))\n  }\n\n  private _onConnError(error: ErrorEvent) {\n    this.log('transport', error.message)\n    this._triggerChanError()\n    this.stateChangeCallbacks.error.forEach((callback) => callback(error))\n  }\n\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeSubscription) =>\n      channel.trigger(CHANNEL_EVENTS.error)\n    )\n  }\n\n  private _appendParams(\n    url: string,\n    params: { [key: string]: string }\n  ): string {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n\n    return `${url}${prefix}${query}`\n  }\n\n  private _flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  private _sendHeartbeat() {\n    if (!this.isConnected()) {\n      return\n    }\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log(\n        'transport',\n        'heartbeat timeout. Attempting to re-establish connection'\n      )\n      this.conn?.close(WS_CLOSE_NORMAL, 'hearbeat timeout')\n      return\n    }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.setAuth(this.accessToken)\n  }\n}\n","import { RealtimeSubscription, RealtimeClient, Transformers } from '@supabase/realtime-js'\nimport { GenericObject, SupabaseEventTypes, SupabaseRealtimePayload } from './types'\n\nexport class SupabaseRealtimeClient {\n  subscription: RealtimeSubscription\n\n  constructor(socket: RealtimeClient, headers: GenericObject, schema: string, tableName: string) {\n    const chanParams: GenericObject = {}\n    const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`\n    const userToken = headers['Authorization'].split(' ')[1]\n\n    if (userToken) {\n      chanParams['user_token'] = userToken\n    }\n\n    this.subscription = socket.channel(topic, chanParams) as RealtimeSubscription\n  }\n\n  private getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(payload.columns, payload.record)\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(payload.columns, payload.old_record)\n    }\n\n    return records\n  }\n\n  /**\n   * The event you want to listen to.\n   *\n   * @param event The event\n   * @param callback A callback function that is called whenever the event occurs.\n   */\n  on(event: SupabaseEventTypes, callback: (payload: SupabaseRealtimePayload<any>) => void) {\n    this.subscription.on(event, (payload: any) => {\n      let enrichedPayload: SupabaseRealtimePayload<any> = {\n        schema: payload.schema,\n        table: payload.table,\n        commit_timestamp: payload.commit_timestamp,\n        eventType: payload.type,\n        new: {},\n        old: {},\n        errors: payload.errors,\n      }\n\n      enrichedPayload = { ...enrichedPayload, ...this.getPayloadRecords(payload) }\n\n      callback(enrichedPayload)\n    })\n    return this\n  }\n\n  /**\n   * Enables the subscription.\n   */\n  subscribe(callback: Function = () => {}) {\n    this.subscription.onError((e: Error) => callback('SUBSCRIPTION_ERROR', e))\n    this.subscription.onClose(() => callback('CLOSED'))\n    this.subscription\n      .subscribe()\n      .receive('ok', () => callback('SUBSCRIBED'))\n      .receive('error', (e: Error) => callback('SUBSCRIPTION_ERROR', e))\n      .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'))\n    return this.subscription\n  }\n}\n","import { PostgrestQueryBuilder } from '@supabase/postgrest-js'\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient'\nimport { RealtimeClient } from '@supabase/realtime-js'\nimport { Fetch, GenericObject, SupabaseEventTypes, SupabaseRealtimePayload } from './types'\n\nexport class SupabaseQueryBuilder<T> extends PostgrestQueryBuilder<T> {\n  private _subscription: SupabaseRealtimeClient | null = null\n  private _realtime: RealtimeClient\n  private _headers: GenericObject\n  private _schema: string\n  private _table: string\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      realtime,\n      table,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: GenericObject\n      schema: string\n      realtime: RealtimeClient\n      table: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    }\n  ) {\n    super(url, { headers, schema, fetch, shouldThrowOnError })\n\n    this._realtime = realtime\n    this._headers = headers\n    this._schema = schema\n    this._table = table\n  }\n\n  /**\n   * Subscribe to realtime changes in your database.\n   * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n   * @param callback A callback that will handle the payload that is sent whenever your database changes.\n   */\n  on(\n    event: SupabaseEventTypes,\n    callback: (payload: SupabaseRealtimePayload<T>) => void\n  ): SupabaseRealtimeClient {\n    if (!this._realtime.isConnected()) {\n      this._realtime.connect()\n    }\n    if (!this._subscription) {\n      this._subscription = new SupabaseRealtimeClient(\n        this._realtime,\n        this._headers,\n        this._schema,\n        this._table\n      )\n    }\n    return this._subscription.on(event, callback)\n  }\n}\n","export type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = (error: any, reject: any) => {\n  if (typeof error.json !== 'function') {\n    return reject(error)\n  }\n  error.json().then((err: any) => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: error?.status || 500,\n    })\n  })\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return resolve(result)\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n","type Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","import { Fetch, FetchParameters, get, post, remove } from './fetch'\nimport { resolveFetch } from './helpers'\nimport { FileObject, FileOptions, SearchOptions } from './types'\n\nconst DEFAULT_SEARCH_OPTIONS = {\n  limit: 100,\n  offset: 0,\n  sortBy: {\n    column: 'name',\n    order: 'asc',\n  },\n}\n\nconst DEFAULT_FILE_OPTIONS: FileOptions = {\n  cacheControl: '3600',\n  contentType: 'text/plain;charset=UTF-8',\n  upsert: false,\n}\n\nexport class StorageFileApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected bucketId?: string\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    bucketId?: string,\n    fetch?: Fetch\n  ) {\n    this.url = url\n    this.headers = headers\n    this.bucketId = bucketId\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n   *\n   * @param method HTTP method.\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   * @param fileOptions HTTP headers.\n   * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n   * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n   * `upsert`: boolean, whether to perform an upsert.\n   */\n  private async uploadOrUpdate(\n    method: 'POST' | 'PUT',\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<{ data: { Key: string } | null; error: Error | null }> {\n    try {\n      let body\n      const options = { ...DEFAULT_FILE_OPTIONS, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...(method === 'POST' && { 'x-upsert': String(options.upsert as boolean) }),\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const cleanPath = this._removeEmptyFolders(path)\n      const _path = this._getFinalPath(cleanPath)\n      const res = await this.fetch(`${this.url}/object/${_path}`, {\n        method,\n        body: body as BodyInit,\n        headers,\n      })\n\n      if (res.ok) {\n        // const data = await res.json()\n        // temporary fix till backend is updated to the latest storage-api version\n        return { data: { Key: _path }, error: null }\n      } else {\n        const error = await res.json()\n        return { data: null, error }\n      }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Uploads a file to an existing bucket.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   * @param fileOptions HTTP headers.\n   * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n   * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n   * `upsert`: boolean, whether to perform an upsert.\n   */\n  async upload(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<{ data: { Key: string } | null; error: Error | null }> {\n    return this.uploadOrUpdate('POST', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Replaces an existing file at the specified path with a new one.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   * @param fileOptions HTTP headers.\n   * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n   * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n   * `upsert`: boolean, whether to perform an upsert.\n   */\n  async update(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<{ data: { Key: string } | null; error: Error | null }> {\n    return this.uploadOrUpdate('PUT', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Moves an existing file.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n   */\n  async move(\n    fromPath: string,\n    toPath: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/move`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Copies an existing file.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n   */\n  async copy(\n    fromPath: string,\n    toPath: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/copy`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds.\n   *\n   * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n   */\n  async createSignedUrl(\n    path: string,\n    expiresIn: number\n  ): Promise<{\n    data: { signedURL: string } | null\n    error: Error | null\n    signedURL: string | null\n  }> {\n    try {\n      const _path = this._getFinalPath(path)\n      let data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${_path}`,\n        { expiresIn },\n        { headers: this.headers }\n      )\n      const signedURL = `${this.url}${data.signedURL}`\n      data = { signedURL }\n      return { data, error: null, signedURL }\n    } catch (error) {\n      return { data: null, error, signedURL: null }\n    }\n  }\n\n  /**\n   * Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds.\n   *\n   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n   */\n  async createSignedUrls(\n    paths: string[],\n    expiresIn: number\n  ): Promise<{\n    data: { error: string | null; path: string | null; signedURL: string }[] | null\n    error: Error | null\n  }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${this.bucketId}`,\n        { expiresIn, paths },\n        { headers: this.headers }\n      )\n      return {\n        data: data.map((datum: { signedURL: string }) => ({\n          ...datum,\n          signedURL: datum.signedURL ? `${this.url}${datum.signedURL}` : null,\n        })),\n        error: null,\n      }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Downloads a file.\n   *\n   * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n   */\n  async download(path: string): Promise<{ data: Blob | null; error: Error | null }> {\n    try {\n      const _path = this._getFinalPath(path)\n      const res = await get(this.fetch, `${this.url}/object/${_path}`, {\n        headers: this.headers,\n        noResolveJson: true,\n      })\n      const data = await res.blob()\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Retrieve URLs for assets in public buckets\n   *\n   * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n   */\n  getPublicUrl(\n    path: string\n  ): {\n    data: { publicURL: string } | null\n    error: Error | null\n    publicURL: string | null\n  } {\n    try {\n      const _path = this._getFinalPath(path)\n      const publicURL = `${this.url}/object/public/${_path}`\n      const data = { publicURL }\n      return { data, error: null, publicURL }\n    } catch (error) {\n      return { data: null, error, publicURL: null }\n    }\n  }\n\n  /**\n   * Deletes files within the same bucket\n   *\n   * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n   */\n  async remove(paths: string[]): Promise<{ data: FileObject[] | null; error: Error | null }> {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/object/${this.bucketId}`,\n        { prefixes: paths },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Get file metadata\n   * @param id the file id to retrieve metadata\n   */\n  // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n  //   try {\n  //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     return { data: null, error }\n  //   }\n  // }\n\n  /**\n   * Update file metadata\n   * @param id the file id to update metadata\n   * @param meta the new file metadata\n   */\n  // async updateMetadata(\n  //   id: string,\n  //   meta: Metadata\n  // ): Promise<{ data: Metadata | null; error: Error | null }> {\n  //   try {\n  //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     return { data: null, error }\n  //   }\n  // }\n\n  /**\n   * Lists all the files within a bucket.\n   * @param path The folder path.\n   * @param options Search options, including `limit`, `offset`, `sortBy`, and `search`.\n   * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n   */\n  async list(\n    path?: string,\n    options?: SearchOptions,\n    parameters?: FetchParameters\n  ): Promise<{ data: FileObject[] | null; error: Error | null }> {\n    try {\n      const body = { ...DEFAULT_SEARCH_OPTIONS, ...options, prefix: path || '' }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  _getFinalPath(path: string) {\n    return `${this.bucketId}/${path}`\n  }\n\n  _removeEmptyFolders(path: string) {\n    return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/')\n  }\n}\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` }\n","// generated by genversion\nexport const version = '1.7.3'\n","import { DEFAULT_HEADERS } from './constants'\nimport { Fetch, get, post, put, remove } from './fetch'\nimport { resolveFetch } from './helpers'\nimport { Bucket } from './types'\n\nexport class StorageBucketApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected fetch: Fetch\n\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Retrieves the details of all Storage buckets within an existing project.\n   */\n  async listBuckets(): Promise<{ data: Bucket[] | null; error: Error | null }> {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  async getBucket(id: string): Promise<{ data: Bucket | null; error: Error | null }> {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @returns newly created bucket id\n   */\n  async createBucket(\n    id: string,\n    options: { public: boolean } = { public: false }\n  ): Promise<{ data: string | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data: data.name, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Updates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are updating.\n   */\n  async updateBucket(\n    id: string,\n    options: { public: boolean }\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await put(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  async emptyBucket(\n    id: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket/${id}/empty`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  async deleteBucket(\n    id: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n","import { StorageBucketApi, StorageFileApi } from './lib'\nimport { Fetch } from './lib/fetch'\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    super(url, headers, fetch)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n","type Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","import { resolveFetch } from './helper'\nimport { Fetch, FunctionInvokeOptions } from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @params token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - the name of the function to invoke\n   * @param invokeOptions - object with the following properties\n   * `headers`: object representing the headers to send with the request\n   * `body`: the body of the request\n   * `responseType`: how the response should be parsed. The default is `json`\n   */\n  async invoke<T = any>(\n    functionName: string,\n    invokeOptions?: FunctionInvokeOptions\n  ): Promise<{ data: T; error: null } | { data: null; error: Error }> {\n    try {\n      const { headers, body } = invokeOptions ?? {}\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: 'POST',\n        headers: Object.assign({}, this.headers, headers),\n        body,\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        return { data: null, error: new Error(await response.text()) }\n      }\n\n      let data\n      const { responseType } = invokeOptions ?? {}\n      if (!responseType || responseType === 'json') {\n        data = await response.json()\n      } else if (responseType === 'arrayBuffer') {\n        data = await response.arrayBuffer()\n      } else if (responseType === 'blob') {\n        data = await response.blob()\n      } else {\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error: any) {\n      return { data: null, error }\n    }\n  }\n}\n","import { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants'\nimport { stripTrailingSlash, isBrowser } from './lib/helpers'\nimport { Fetch, GenericObject, SupabaseClientOptions } from './lib/types'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder'\nimport { SupabaseStorageClient } from '@supabase/storage-js'\nimport { FunctionsClient } from '@supabase/functions-js'\nimport { PostgrestClient } from '@supabase/postgrest-js'\nimport { AuthChangeEvent } from '@supabase/gotrue-js'\nimport { RealtimeClient, RealtimeSubscription, RealtimeClientOptions } from '@supabase/realtime-js'\n\nconst DEFAULT_OPTIONS = {\n  schema: 'public',\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS,\n}\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n\n  protected schema: string\n  protected restUrl: string\n  protected realtimeUrl: string\n  protected authUrl: string\n  protected storageUrl: string\n  protected functionsUrl: string\n  protected realtime: RealtimeClient\n  protected multiTab: boolean\n  protected fetch?: Fetch\n  protected changedAccessToken: string | undefined\n  protected shouldThrowOnError: boolean\n\n  protected headers: {\n    [key: string]: string\n  }\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.headers Any additional headers to send with each network request.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions\n  ) {\n    if (!supabaseUrl) throw new Error('supabaseUrl is required.')\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    const _supabaseUrl = stripTrailingSlash(supabaseUrl)\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n\n    this.restUrl = `${_supabaseUrl}/rest/v1`\n    this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws')\n    this.authUrl = `${_supabaseUrl}/auth/v1`\n    this.storageUrl = `${_supabaseUrl}/storage/v1`\n\n    const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/)\n    if (isPlatform) {\n      const urlParts = _supabaseUrl.split('.')\n      this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`\n    } else {\n      this.functionsUrl = `${_supabaseUrl}/functions/v1`\n    }\n\n    this.schema = settings.schema\n    this.multiTab = settings.multiTab\n    this.fetch = settings.fetch\n    this.headers = { ...DEFAULT_HEADERS, ...options?.headers }\n    this.shouldThrowOnError = settings.shouldThrowOnError || false\n\n    this.auth = this._initSupabaseAuthClient(settings)\n    this.realtime = this._initRealtimeClient({ headers: this.headers, ...settings.realtime })\n\n    this._listenForAuthEvents()\n    this._listenForMultiTabEvents()\n\n    // In the future we might allow the user to pass in a logger to receive these events.\n    // this.realtime.onOpen(() => console.log('OPEN'))\n    // this.realtime.onClose(() => console.log('CLOSED'))\n    // this.realtime.onError((e: Error) => console.log('Socket error', e))\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions() {\n    return new FunctionsClient(this.functionsUrl, {\n      headers: this._getAuthHeaders(),\n      customFetch: this.fetch,\n    })\n  }\n\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  get storage() {\n    return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch)\n  }\n\n  /**\n   * Perform a table operation.\n   *\n   * @param table The table name to operate on.\n   */\n  from<T = any>(table: string): SupabaseQueryBuilder<T> {\n    const url = `${this.restUrl}/${table}`\n    return new SupabaseQueryBuilder<T>(url, {\n      headers: this._getAuthHeaders(),\n      schema: this.schema,\n      realtime: this.realtime,\n      table,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param params  The parameters to pass to the function call.\n   * @param head   When set to true, no data will be returned.\n   * @param count  Count algorithm to use to count rows in a table.\n   *\n   */\n  rpc<T = any>(\n    fn: string,\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: { head?: boolean; count?: null | 'exact' | 'planned' | 'estimated' } = {}\n  ) {\n    const rest = this._initPostgRESTClient()\n    return rest.rpc<T>(fn, params, { head, count })\n  }\n\n  /**\n   * Closes and removes all subscriptions and returns a list of removed\n   * subscriptions and their errors.\n   */\n  async removeAllSubscriptions(): Promise<\n    { data: { subscription: RealtimeSubscription }; error: Error | null }[]\n  > {\n    const allSubs: RealtimeSubscription[] = this.getSubscriptions().slice()\n    const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub))\n    const allRemovedSubs = await Promise.all(allSubPromises)\n\n    return allRemovedSubs.map(({ error }, i) => {\n      return {\n        data: { subscription: allSubs[i] },\n        error,\n      }\n    })\n  }\n\n  /**\n   * Closes and removes a subscription and returns the number of open subscriptions.\n   *\n   * @param subscription The subscription you want to close and remove.\n   */\n  async removeSubscription(\n    subscription: RealtimeSubscription\n  ): Promise<{ data: { openSubscriptions: number }; error: Error | null }> {\n    const { error } = await this._closeSubscription(subscription)\n    const allSubs: RealtimeSubscription[] = this.getSubscriptions()\n    const openSubCount = allSubs.filter((chan) => chan.isJoined()).length\n\n    if (allSubs.length === 0) await this.realtime.disconnect()\n\n    return { data: { openSubscriptions: openSubCount }, error }\n  }\n\n  private async _closeSubscription(\n    subscription: RealtimeSubscription\n  ): Promise<{ error: Error | null }> {\n    let error = null\n\n    if (!subscription.isClosed()) {\n      const { error: unsubError } = await this._unsubscribeSubscription(subscription)\n      error = unsubError\n    }\n\n    this.realtime.remove(subscription)\n\n    return { error }\n  }\n\n  private _unsubscribeSubscription(\n    subscription: RealtimeSubscription\n  ): Promise<{ error: Error | null }> {\n    return new Promise((resolve) => {\n      subscription\n        .unsubscribe()\n        .receive('ok', () => resolve({ error: null }))\n        .receive('error', (error: Error) => resolve({ error }))\n        .receive('timeout', () => resolve({ error: new Error('timed out') }))\n    })\n  }\n\n  /**\n   * Returns an array of all your subscriptions.\n   */\n  getSubscriptions(): RealtimeSubscription[] {\n    return this.realtime.channels as RealtimeSubscription[]\n  }\n\n  private _initSupabaseAuthClient({\n    autoRefreshToken,\n    persistSession,\n    detectSessionInUrl,\n    localStorage,\n    headers,\n    fetch,\n    cookieOptions,\n    multiTab,\n  }: SupabaseClientOptions) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl,\n      headers: { ...headers, ...authHeaders },\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      localStorage,\n      fetch,\n      cookieOptions,\n      multiTab,\n    })\n  }\n\n  private _initRealtimeClient(options?: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl, {\n      ...options,\n      params: { ...options?.params, apikey: this.supabaseKey },\n    })\n  }\n\n  private _initPostgRESTClient() {\n    return new PostgrestClient(this.restUrl, {\n      headers: this._getAuthHeaders(),\n      schema: this.schema,\n      fetch: this.fetch,\n      throwOnError: this.shouldThrowOnError,\n    })\n  }\n\n  private _getAuthHeaders(): GenericObject {\n    const headers: GenericObject = { ...this.headers }\n    const authBearer = this.auth.session()?.access_token ?? this.supabaseKey\n    headers['apikey'] = this.supabaseKey\n    headers['Authorization'] = headers['Authorization'] || `Bearer ${authBearer}`\n    return headers\n  }\n\n  private _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !window?.addEventListener) {\n      return null\n    }\n\n    try {\n      return window?.addEventListener('storage', (e: StorageEvent) => {\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue))\n          const accessToken: string | undefined =\n            newSession?.currentSession?.access_token ?? undefined\n          const previousAccessToken = this.auth.session()?.access_token\n          if (!accessToken) {\n            this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE')\n          } else if (!previousAccessToken && accessToken) {\n            this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE')\n          } else if (previousAccessToken !== accessToken) {\n            this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE')\n          }\n        }\n      })\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error)\n      return null\n    }\n  }\n\n  private _listenForAuthEvents() {\n    let { data } = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, session?.access_token, 'CLIENT')\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    token: string | undefined,\n    source: 'CLIENT' | 'STORAGE'\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      // Token has changed\n      this.realtime.setAuth(token!)\n      // Ideally we should call this.auth.recoverSession() - need to make public\n      // to trigger a \"SIGNED_IN\" event on this client.\n      if (source == 'STORAGE') this.auth.setAuth(token!)\n\n      this.changedAccessToken = token\n    } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n      // Token is removed\n      this.realtime.setAuth(this.supabaseKey)\n      if (source == 'STORAGE') this.auth.signOut()\n    }\n  }\n}\n","import SupabaseClient from './SupabaseClient'\nimport { SupabaseClientOptions, SupabaseRealtimePayload } from './lib/types'\nimport { User as AuthUser, Session as AuthSession } from '@supabase/gotrue-js'\nexport * from '@supabase/gotrue-js'\nexport {\n  PostgrestResponse,\n  PostgrestSingleResponse,\n  PostgrestMaybeSingleResponse,\n  PostgrestError,\n} from '@supabase/postgrest-js'\nexport * from '@supabase/realtime-js'\n\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions\n): SupabaseClient => {\n  return new SupabaseClient(supabaseUrl, supabaseKey, options)\n}\n\nexport {\n  createClient,\n  SupabaseClient,\n  SupabaseClientOptions,\n  SupabaseRealtimePayload,\n  AuthUser,\n  AuthSession,\n}\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","DEFAULT_HEADERS","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","_getPrototypeOf","o","getPrototypeOf","bind","__proto__","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","this","arguments","apply","NETWORK_FAILURE","STORAGE_KEY","COOKIE_OPTIONS","name","lifetime","domain","path","sameSite","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","handleError","reject","status","json","then","_getRequestParams","method","options","body","params","headers","_handleRequest","fetcher","url","Promise","resolve","ok","noResolveJson","data","catch","get","post","put","remove","serializeCookie","cookie","secure","val","opt","enc","encodeURIComponent","fieldContentRegExp","test","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","toLowerCase","serialize","Date","now","getCookieString","req","res","cookies","strCookies","map","c","host","Error","indexOf","split","endsWith","isSecureEnvironment","previousCookies","getHeader","Array","push","setCookies","setHeader","expiresAt","expiresIn","round","isBrowser","window","getParameterByName","location","href","replace","results","RegExp","exec","decodeURIComponent","resolveFetch","customFetch","_fetch","fetch","args","__awaiter","getItemAsync","storage","getItem","parse","removeItemAsync","removeItem","GoTrueApi","cookieOptions","jwt","provider","urlParams","redirectTo","scopes","queryParams","query","URLSearchParams","join","email","password","queryString","gotrue_meta_security","captcha_token","captchaToken","session","expires_in","expires_at","phone","id_token","nonce","client_id","issuer","shouldCreateUser","create_user","_createRequestHeaders","token","type","redirect_to","refreshToken","refresh_token","end","event","access_token","cookieName","redirect","attributes","user","users","uid","getUser","refreshAccessToken","globalThis","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","decodeBase64URL","atob","Buffer","from","toString","GoTrueClient","stateChangeEmitters","Map","networkRetries","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","_handleVisibilityChange","getSessionFromUrl","storeSession","_removeSession","signUpWithPhone","signUpWithEmail","_saveSession","_notifyAllSubscribers","id","oidc","sendMagicLinkEmail","_handleEmailSignIn","sendMobileOTP","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","_handleOpenIDConnectSignIn","verifyOTP","updateUser","arg0","timeNow","tokenParts","bodyJSON","parsed","undefined","exp","token_type","provider_token","provider_refresh_token","parseInt","recoveryMode","hash","accessToken","signOut","callback","r","random","subscription","unsubscribe","delete","set","signInWithEmail","confirmed_at","email_confirmed_at","signInWithPhone","phone_confirmed_at","getUrlForProvider","signInWithOpenIDConnect","getItemSynchronously","console","log","refreshTokenTimer","clearTimeout","setTimeout","forEach","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","setItemAsync","unref","addEventListener","newSession","String","newValue","document","visibilityState","SupabaseAuthClient","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","PostgresTypes","PostgrestBuilder","builder","assign","shouldThrowOnError","allowEmpty","throwOnError","onfulfilled","onrejected","schema","includes","signal","count","statusText","isReturnMinimal","text","countHeader","match","contentRange","details","postgrestResponse","fetchError","hint","code","PostgrestTransformBuilder","columns","quoted","cleanedColumns","searchParams","column","ascending","nullsFirst","foreignTable","existingOrder","to","keyOffset","keyLimit","PostgrestFilterBuilder","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","operator","append","filters","pattern","values","cleanedValues","s","range","config","typePart","configPart","keys","PostgrestQueryBuilder","URL","head","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","Set","ignoreDuplicates","PostgrestRpcBuilder","entries","PostgrestClient","table","fn","rpc","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","charAt","dataType","slice","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","valTrim","_","DEFAULT_TIMEOUT","Timer","timerCalc","timer","tries","Serializer","HEADER_LENGTH","rawPayload","ArrayBuffer","_binaryDecode","buffer","view","DataView","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","decode","ref","payload","byteLength","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","_cancelRefEvent","send","_hasReceived","startTimeout","socket","join_ref","joinRef","response","makeRef","replyEventName","on","_cancelTimeout","_matchReceive","trigger","off","filter","h","RealtimeSubscription","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","receive","joined","reset","pushEvent","onClose","onError","reason","isLeaving","isClosed","errored","scheduleTimeout","isJoining","reply","isConnected","rejoin","close","isJoined","canPush","updatePayload","leaving","destroy","leavePush","leave","leaveOpenTopic","joining","resend","handledPayload","onMessage","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","open","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","onerror","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","readyState","connecting","Connecting","Open","closing","Closing","Closed","connectionState","chanParams","chan","rawMessage","isMember","_appendParams","vsn","newRef","updateJoinPayload","user_token","dupChannel","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","setAuth","SupabaseRealtimeClient","tableName","userToken","records","new","old","Transformers","old_record","enrichedPayload","commit_timestamp","eventType","errors","getPayloadRecords","subscribe","SupabaseQueryBuilder","realtime","_subscription","_realtime","_headers","_schema","_table","parameters","DEFAULT_SEARCH_OPTIONS","limit","sortBy","order","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","fileBody","fileOptions","Blob","FormData","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","uploadOrUpdate","fromPath","toPath","sourceKey","destinationKey","signedURL","paths","datum","blob","publicURL","prefixes","StorageBucketApi","public","StorageClient","FunctionsClient","Authorization","functionName","invokeOptions","isRelayError","responseType","arrayBuffer","SupabaseClient","supabaseUrl","supabaseKey","_supabaseUrl","restUrl","realtimeUrl","authUrl","storageUrl","urlParts","functionsUrl","auth","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","_getAuthHeaders","SupabaseStorageClient","rest","_initPostgRESTClient","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","all","allRemovedSubs","_closeSubscription","openSubCount","openSubscriptions","_unsubscribeSubscription","unsubError","authHeaders","apikey","authBearer","previousAccessToken","_handleTokenChanged","onAuthStateChange","source","changedAccessToken","createClient","naiveFallback","module","exports","__global__","_globalThis","require","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","_arrayLikeToArray","len","arr2","asyncGeneratorStep","gen","_next","_throw","arg","info","done","_asyncToGenerator","_defineProperty","obj","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_slicedToArray","_i","_s","_e","_arr","_n","_d","_typeof","_unsupportedIterableToArray","minLen","n"],"sourceRoot":""}